// <auto-generated />
using System;
using CashFlow.Entries.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CashFlow.Entries.Infrastructure.Migrations
{
    [DbContext(typeof(EntriesDbContext))]
    [Migration("20250630105821_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CashFlow.Entries.Domain.Entries.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("category_id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("EntryTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("entry_type_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("category_name");

                    b.HasKey("Id");

                    b.HasIndex("EntryTypeId");

                    b.ToTable("category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbb3f1ea-91cb-42e8-8daf-f68bfa520c2f"),
                            EntryTypeId = new Guid("a7964402-ab2b-4a56-9670-72f723364f80"),
                            Name = "REVENUE"
                        },
                        new
                        {
                            Id = new Guid("f841be5a-9923-419b-87a2-c3654e02620a"),
                            EntryTypeId = new Guid("a7964402-ab2b-4a56-9670-72f723364f80"),
                            Name = "OTHER_INCOME"
                        },
                        new
                        {
                            Id = new Guid("fdaacfad-b3c9-4c5a-9c3b-3ce9667fabed"),
                            EntryTypeId = new Guid("a7964402-ab2b-4a56-9670-72f723364f80"),
                            Name = "INVESTMENTS"
                        },
                        new
                        {
                            Id = new Guid("929ed0ff-d817-4a82-8124-3dfcd6a1f9ce"),
                            EntryTypeId = new Guid("a7964402-ab2b-4a56-9670-72f723364f80"),
                            Name = "GIFTS_DONATIONS"
                        },
                        new
                        {
                            Id = new Guid("b0c380a7-8472-4e45-a04d-5f9920b2877a"),
                            EntryTypeId = new Guid("a7964402-ab2b-4a56-9670-72f723364f80"),
                            Name = "LOAN_RECEIVED"
                        },
                        new
                        {
                            Id = new Guid("63eb96fe-2c91-43b9-b415-c65ee867e2bd"),
                            EntryTypeId = new Guid("a7964402-ab2b-4a56-9670-72f723364f80"),
                            Name = "OTHER_CREDITS"
                        },
                        new
                        {
                            Id = new Guid("283b1aca-ef7a-4fce-bcbb-8752e2153c08"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "FOOD"
                        },
                        new
                        {
                            Id = new Guid("a11d43e6-96d6-415f-b2fe-6f0a55970eb9"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "TRANSPORTATION"
                        },
                        new
                        {
                            Id = new Guid("f38043ac-9294-4909-af22-e260f9e871bb"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "EDUCATION"
                        },
                        new
                        {
                            Id = new Guid("56e7533b-4e48-4483-b387-4aee71e454bd"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "HEALTH"
                        },
                        new
                        {
                            Id = new Guid("47b934b2-e7ec-4dd9-b89e-f542b37505ca"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "LEISURE"
                        },
                        new
                        {
                            Id = new Guid("96d8efc8-61f1-4007-9917-0862b0f2f57a"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "HOUSING"
                        },
                        new
                        {
                            Id = new Guid("c5617a27-be6e-4848-82e8-bbf0f6548097"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "COMMUNICATION"
                        },
                        new
                        {
                            Id = new Guid("b1ac6638-318d-423f-8c4c-fa3f614fd2e1"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "SUPPLIES"
                        },
                        new
                        {
                            Id = new Guid("054a551e-9841-4bef-ad35-8bb9a381a916"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "UTILITIES"
                        },
                        new
                        {
                            Id = new Guid("c87bfe80-d970-410f-b503-5355c5a372d3"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "MAINTENANCE"
                        },
                        new
                        {
                            Id = new Guid("adc25139-e6f6-432a-879b-1f05e6bd32b8"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "EQUIPMENT"
                        },
                        new
                        {
                            Id = new Guid("d371511b-f8d7-4468-8e9f-d540e7c0d7b6"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "FEES"
                        },
                        new
                        {
                            Id = new Guid("0c90948f-f1db-42cb-8b6c-5c43cfa99d41"),
                            EntryTypeId = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "CLOTHING"
                        },
                        new
                        {
                            Id = new Guid("a604b4c1-637c-454a-b4a1-e4a5c1af0c18"),
                            EntryTypeId = new Guid("a7964402-ab2b-4a56-9670-72f723364f80"),
                            Name = "OTHER_DEBITS"
                        });
                });

            modelBuilder.Entity("CashFlow.Entries.Domain.Entries.Entities.Entry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("entry_id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("entry_amount");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("entry_description");

                    b.Property<Guid>("EntryTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("entry_type_id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EntryTypeId");

                    b.ToTable("entry", (string)null);
                });

            modelBuilder.Entity("CashFlow.Entries.Domain.Entries.Entities.EntryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("entry_type_id")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("entry_type_name");

                    b.HasKey("Id");

                    b.ToTable("entry_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7964402-ab2b-4a56-9670-72f723364f80"),
                            Name = "CREDIT"
                        },
                        new
                        {
                            Id = new Guid("880fd242-952b-4b4a-82ca-9a32a2e3866c"),
                            Name = "DEBIT"
                        });
                });

            modelBuilder.Entity("CashFlow.Entries.Domain.Entries.Entities.Category", b =>
                {
                    b.HasOne("CashFlow.Entries.Domain.Entries.Entities.EntryType", "EntryType")
                        .WithMany("Categories")
                        .HasForeignKey("EntryTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EntryType");
                });

            modelBuilder.Entity("CashFlow.Entries.Domain.Entries.Entities.Entry", b =>
                {
                    b.HasOne("CashFlow.Entries.Domain.Entries.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CashFlow.Entries.Domain.Entries.Entities.EntryType", "EntryType")
                        .WithMany()
                        .HasForeignKey("EntryTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("EntryType");
                });

            modelBuilder.Entity("CashFlow.Entries.Domain.Entries.Entities.EntryType", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
